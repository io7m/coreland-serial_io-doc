(section
  (ref "serial_io_unsigned_32")
  (title "Unsigned_32")

  (subsection
    (title "Synopsis")
    (para-verbatim package_synopsis
"type Unsigned_32_t is new Interfaces.Unsigned_32;
type Unsigned_32_Packed_Index_t is range 1 .. 4;
type Unsigned_32_Packed_t is array (Unsigned_32_Packed_Index_t) of Unsigned_8_t;
pragma Pack (Unsigned_32_Packed_t);

procedure Pack_32_BE
  (Input  : in     Unsigned_32_t;
   Output :    out Unsigned_32_Packed_t);

procedure Pack_32_LE
  (Input  : in     Unsigned_32_t;
   Output :    out Unsigned_32_Packed_t);

procedure Unpack_32_BE
  (Input  : in     Unsigned_32_Packed_t;
   Output :    out Unsigned_32_t);

procedure Unpack_32_LE
  (Input  : in     Unsigned_32_Packed_t;
   Output :    out Unsigned_32_t);

procedure Attribute_Write_32_BE
  (Stream : not null access Ada.Streams.Root_Stream_Type'Class;
   Item   : in Unsigned_32_t);

procedure Attribute_Read_32_BE
  (Stream : not null access Ada.Streams.Root_Stream_Type'Class;
   Item   : out Unsigned_32_t);

for Unsigned_32_t'Write use Attribute_Write_32_BE;
for Unsigned_32_t'Read  use Attribute_Read_32_BE;"))

  (subsection
    (title "Packing")
    (para-verbatim procedure_synopsis
"procedure Pack_32_BE
  (Input  : in     Unsigned_32_t;
   Output :    out Unsigned_32_Packed_t);

procedure Pack_32_LE
  (Input  : in     Unsigned_32_t;
   Output :    out Unsigned_32_Packed_t);")
    (para "The " (item ada_procedure "Pack_32_BE") " and "
      (item ada_procedure "Pack_32_LE") " pack an "
      (item ada_type "Unsigned_32_t") " integer " (item parameter "Input")
      " into an array of octets " (item parameter "Output") " in big-endian
      and little-endian byte order, respectively."))

  (subsection
    (title "Unpacking")
    (para-verbatim procedure_synopsis
"procedure Unpack_32_BE
  (Input  : in     Unsigned_32_Packed_t;
   Output :    out Unsigned_32_t);

procedure Unpack_32_LE
  (Input  : in     Unsigned_32_Packed_t;
   Output :    out Unsigned_32_t);")
    (para "The " (item ada_procedure "Unpack_32_BE") " and "
      (item ada_procedure "Unpack_32_LE") " unpack an integer "
      (item parameter "Output") " from an array of octets "
      (item parameter "Input") " arranged in big-endian and
      little-endian byte order, respectively.")))
